name: Test AMMR

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

concurrency: 
  group: ci-${{ github.ref }}
  cancel-in-progress: true


jobs:
  linux-tests: 
    strategy:
      fail-fast: false
      matrix:
        test_group: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]
    
    runs-on: ubuntu-latest
    container: ghcr.io/anybody/anybodycon-github-actions:latest_Beta

    steps:
      - uses: actions/checkout@v4
        with:
          repository: anybody/ammr
          ref: master
          path: ammr
          token: ${{ secrets.AMMR_SPINE_READ_TOKEN }}

      - name: Install pytest-split
        run: micromamba install -y --name base -c conda-forge pytest-split=0.8.1
  
      - name: Run tests
        run: |
          cd ammr/Tests
          pytest --splits 20 --group ${{ matrix.test_group }} --splitting-algorithm=least_duration --runslow --clean-durations --store-durations
        env:
          RLM_LICENSE: ${{ secrets.RLM_LICENSE }}
          RLM_LICENSE_PASSWORD: ${{ secrets.RLM_LICENSE_PASSWORD }}
         
      - name: Upload partial durations
        uses: actions/upload-artifact@v3
        with:
          name: split-${{ matrix.test_group }}
          path: ammr/Tests/.test_durations
          retention-days: 1



  upload-timings:
    runs-on: ubuntu-latest
    needs: linux-tests
    steps:
      - uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v3

      - name: Combine test-durations
        run: |
          import json, pathlib
          files = pathlib.Path.cwd().glob("*/.test_durations")
          out = {}
          for file in files:
              out.update(json.loads(file.read_text()))
          pathlib.Path('.test_durations').write_text(json.dumps(out, indent=2))    
        shell: python

      - name: Upload full durations file
        uses: actions/upload-artifact@v3
        with:
          name: .test_durations
          path: .test_durations


  # windows-tests:
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       test_group: [1, 2, 3, 4, 5, 6, 7, 8]

  #   runs-on: windows-latest

  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         repository: anybody/ammr
  #         ref: master
  #         path: ammr
  #         token: ${{ secrets.AMMR_SPINE_READ_TOKEN }}

  #     - uses: anybody/setup-anybody@main
  #       name: Install AnyBody
  #       with:
  #         anybody-version: "7.5.0"
  #         anybody-version-suffix: "Beta"
  #         python-environment: "minimal"

  #     - name: Install pytest
  #       uses: mamba-org/setup-micromamba@v1
  #       with:
  #         environment-file: ammr/Tests/test-environment.yml
  #         init-shell: powershell
  #         cache-environment: true

  #     - name:
  #       run: |
  #         cd ammr/Tests
  #         pytest --splits 8 --group ${{ matrix.test_group }} --splitting-algorithm=least_duration --durations=10 --runslow
        
  #       env:
  #         RLM_LICENSE: ${{ secrets.RLM_LICENSE }}
  #         RLM_LICENSE_PASSWORD: ${{ secrets.RLM_LICENSE_PASSWORD }}
